---
import Layout from "@/layouts/Layout.astro";
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";
import fs from "fs";
import path from "path";

const { album } = Astro.params;
const albumPath = `/assets/gallery/${album}`;
const absoluteDir = path.resolve("public" + albumPath);

// 读取相册图片
let imageSources: string[] = [];

if (fs.existsSync(absoluteDir)) {
  imageSources = fs
    .readdirSync(absoluteDir)
    .filter((file) => /\.(jpg|jpeg|png|webp)$/i.test(file))
    .map((file) => `${albumPath}/${file}`);
}

// 读取 meta.json
let meta: any = {};
const metaPath = path.join(absoluteDir, "meta.json");
if (fs.existsSync(metaPath)) {
  try {
    meta = JSON.parse(fs.readFileSync(metaPath, "utf-8"));
  } catch (e) {
    console.error(`读取 meta.json 失败: ${album}`, e);
  }
}

// 提取经纬度
let latitude = null;
let longitude = null;

if (meta.location && meta.location.includes(",")) {
  [latitude, longitude] = meta.location.split(",").map(Number);
}

// 动态路径生成
export async function getStaticPaths() {
  const baseDir = path.resolve("public/assets/gallery");
  const albums = fs.existsSync(baseDir)
    ? fs.readdirSync(baseDir).filter((name) =>
        fs.statSync(path.join(baseDir, name)).isDirectory()
      )
    : [];

  return albums.map((name) => ({
    params: { album: name },
  }));
}
---

<Layout>
  <Header />

  <main id="main-content" class="max-w-6xl mx-auto p-4">
    <h1 class="text-3xl font-bold mb-2">📸 {meta.title || album}</h1>
    {meta.date && <p class="text-gray-500">{meta.date}</p>}
    {meta.description && <p class="mt-2">{meta.description}</p>}

    {latitude && longitude && (
      <div class="mt-6 mb-8">
        <iframe
          src={`https://maps.google.com/maps?q=${latitude},${longitude}&z=14&output=embed`}
          width="100%"
          height="250"
          style="border:0;"
          allowfullscreen=""
          loading="lazy"
          referrerpolicy="no-referrer-when-downgrade"
        ></iframe>
      </div>
    )}

    <div class="columns-1 sm:columns-2 lg:columns-3 gap-4">
      {imageSources.map((src, index) => (
        <div class="mb-4 break-inside-avoid">
          <img
            src={src}
            alt={`Image ${index}`}
            class="rounded-lg cursor-pointer transition-transform duration-300 hover:scale-102 "
            onclick={`showLightbox('${src}')`}
            loading="lazy"
          />
        </div>
      ))}
    </div>
  </main>

  <Footer />

  <!-- Lightbox -->
  <div id="lightbox" class="fixed inset-0 bg-black bg-opacity-80 flex items-center justify-center z-50 hidden">
    <img id="lightbox-img" src="" alt="Preview" class="max-w-full max-h-[90vh] rounded-lg shadow-xl" />
    <button onclick="hideLightbox()" class="absolute top-6 right-6 text-white text-3xl">&times;</button>
  </div>

  <!-- Lightbox Script -->
  <script is:raw>
    function showLightbox(src) {
      document.getElementById("lightbox-img").src = src;
      document.getElementById("lightbox").classList.remove("hidden");
    }

    function hideLightbox() {
      document.getElementById("lightbox").classList.add("hidden");
    }

    document.addEventListener('click', function(e) {
      const lightbox = document.getElementById('lightbox');
      if (lightbox && !lightbox.classList.contains('hidden') && e.target === lightbox) {
        hideLightbox();
      }
    });

    document.addEventListener('keydown', function(e) {
      const lightbox = document.getElementById('lightbox');
      if (lightbox && !lightbox.classList.contains('hidden') && e.key === 'Escape') {
        hideLightbox();
      }
    });
  </script>

  <style is:global>
    #lightbox {
      background-color: rgba(0, 0, 0, 0.6);
    }
  </style>
</Layout>
