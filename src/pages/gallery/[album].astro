---
import Layout from "@/layouts/Layout.astro";
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";
import fs from "fs";
import path from "path";

const { album } = Astro.params;
const albumPath = `/assets/gallery/${album}`;
const absoluteDir = path.resolve("public" + albumPath);

let imageSources: string[] = [];

if (fs.existsSync(absoluteDir)) {
  imageSources = fs
    .readdirSync(absoluteDir)
    .filter((file) => /\.(jpg|jpeg|png|webp)$/i.test(file))
    .map((file) => `${albumPath}/${file}`);
}

// 动态路径列表生成
export async function getStaticPaths() {
  const baseDir = path.resolve("public/assets/gallery");
  const albums = fs.existsSync(baseDir)
    ? fs.readdirSync(baseDir).filter((name) =>
        fs.statSync(path.join(baseDir, name)).isDirectory()
      )
    : [];

  return albums.map((name) => ({
    params: { album: name },
  }));
}
---

<Layout>
  <Header />

  <main id="main-content" class="max-w-6xl mx-auto p-4">
    <h1 class="text-3xl font-bold mb-6">📸 相册：{album}</h1>

    <div class="columns-1 sm:columns-2 lg:columns-3 gap-4">
      {imageSources.map((src, index) => (
        <div class="mb-4 break-inside-avoid">
          <img
            src={src}
            alt={`Image ${index}`}
            class="rounded-lg cursor-pointer transition hover:opacity-80"
            onclick={`showLightbox('${src}')`}
            loading="lazy"
          />
        </div>
      ))}
    </div>
  </main>

  <Footer />

  <!-- Lightbox -->
  <div id="lightbox" class="fixed inset-0 bg-black bg-opacity-80 flex items-center justify-center z-50 hidden">
    <img id="lightbox-img" src="" alt="Preview" class="max-w-full max-h-[90vh] rounded-lg shadow-xl" />
    <button onclick="hideLightbox()" class="absolute top-6 right-6 text-white text-3xl">&times;</button>
  </div>

  <!-- Script -->
  <script is:raw>
    function showLightbox(src) {
        document.getElementById("lightbox-img").src = src;
        document.getElementById("lightbox").classList.remove("hidden");
      }
    
      function hideLightbox() {
        document.getElementById("lightbox").classList.add("hidden");
      }
    
      function bindLightboxEvents() {
        const lightbox = document.getElementById("lightbox");
        if (!lightbox.dataset.bound) {
          lightbox.addEventListener("click", (e) => {
            if (e.target.id === "lightbox") hideLightbox();
          });
          lightbox.dataset.bound = "true";
        }
      }
    
      // 页面首次加载
      document.addEventListener("DOMContentLoaded", bindLightboxEvents);
      // 页面后退返回（缓存恢复）
      window.addEventListener("pageshow", bindLightboxEvents);
  </script>
  <style is:global>
    #lightbox {
      background-color: rgba(0, 0, 0, 0.6); /* 半透明黑色背景 */
    }
  </style>
</Layout>
